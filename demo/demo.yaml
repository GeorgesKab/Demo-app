apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ingress-2
  namespace: demo-workspace
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: $request_uri
spec:
  ingressClassName: nginx
  rules:
  - host: localhost
    http:
      paths:
      - path: /demo
        pathType: ImplementationSpecific
        backend:
          service:
            name: my-app-cluster
            port:
              number: 80
      - path: /demo2
        pathType: ImplementationSpecific
        backend:
          service:
            name: my-app-cluster-2
            port:
              number: 80
---
apiVersion: v1
kind: Service
metadata:
  name: my-app-cluster
  namespace: demo-workspace
spec:
  type: ClusterIP
  ports:
    - name: app-port-8001
      protocol: TCP
      port: 80
      targetPort: 8001
  selector:
    run: my-app-demo
---
apiVersion: v1
kind: Service
metadata:
  name: my-app-cluster-2
  namespace: demo-workspace
spec:
  type: ClusterIP
  ports:
    - name: app-port-8001
      protocol: TCP
      port: 80
      targetPort: 8001
  selector:
    run: my-app-demo-2
---
kind: Deployment
apiVersion: apps/v1
metadata:
  name: my-app-deployment
  namespace: demo-workspace
spec:
  selector:
    matchLabels:
      run: my-app-demo
  replicas: 1
  template:
    metadata:
      labels:
        run: my-app-demo
    spec:
      volumes:
        - name: task-pv-storage
          persistentVolumeClaim:
            claimName: task-pv-claim
      containers:
        - name: my-app
          image: d_image
          command: ["/bin/sh","-c"]
          args: ["/usr/lib/jvm/java-21/bin/java -jar /data/springboot/apps/SpringBootDemo.jar --server.servlet.context-path=/demo 1>/dev/null 2>&1 & while true; do sleep 30; done;"]
            #args: ["/data/springboot/apps/SpringBootDemo-controller.sh start && while true; do sleep 30; done;"]
          imagePullPolicy: Never
          resources:
            requests:
              cpu: 1000m
              memory: 1028Mi
            limits:
              cpu: 1000m
              memory: 1028Mi
          ports:
            - containerPort: 8001
              protocol: TCP
          volumeMounts:
            - mountPath: "/home/georgeskabbouji/kubernetes/data"
              name: task-pv-storage
---
kind: Deployment
apiVersion: apps/v1
metadata:
  name: my-app-deployment-2
  namespace: demo-workspace
spec:
  selector:
    matchLabels:
      run: my-app-demo-2
  replicas: 1
  template:
    metadata:
      labels:
        run: my-app-demo-2
    spec:
      containers:
        - name: my-app-2
          image: d_image
          command: ["/bin/sh","-c"]
          args: ["/usr/lib/jvm/java-21/bin/java -jar /data/springboot/apps/SpringBootDemo.jar --server.servlet.context-path=/demo2 1>/dev/null 2>&1 & while true; do sleep 30; done;"]
            #args: ["/data/springboot/apps/SpringBootDemo-controller.sh start && while true; do sleep 30; done;"]
          imagePullPolicy: Never
          resources:
            requests:
              cpu: 1000m
              memory: 1028Mi
            limits:
              cpu: 1000m
              memory: 1028Mi
          ports:
            - containerPort: 8001
              protocol: TCP
